{"version":3,"sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","data/resume/skills.js","pages/Resume.js"],"names":["Degree","data","className","degree","href","link","school","year","Education","id","map","defaultProps","Job","company","position","daterange","points","point","Experience","job","CategoryButton","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","name","color","barStyle","width","String","Math","min","max","style","Skills","Component","constructor","props","super","handleChildClick","this","setState","prevState","buttons","Object","keys","reduce","obj","key","All","some","state","skills","handleProps","getRows","actCat","sort","a","b","ret","skill","getButtons","render","Course","last","number","Courses","courses","university","course","idx","length","References","to","degrees","positions","colors","Set","acc","concat","index","sections","Resume","Main","description","data-testid","sec","toLowerCase"],"mappings":"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","file":"static/js/11.02af0f27.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={this.props.categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h3>Skills</h3>\n          <p>Note: I think these sections are silly, but everyone seems to have one.\n            Here is a *mostly* honest overview of my skills.\n          </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst References = () => (\n  <div className=\"references\">\n    <div className=\"link-to\" id=\"references\" />\n    <div className=\"title\">\n      <Link to=\"/contact\">\n        <h3>References are available upon request</h3>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default References;\n","const courses = [\n  {\n    title: 'Foundations of Data Science',\n    number: '3250',\n    link: 'https://learn.utoronto.ca/programs-courses/courses/3250-foundations-data-science',\n    university: 'U of T SCS',\n  },\n  {\n    title: 'Statistics for Data Science',\n    number: '3251',\n    link: 'https://learn.utoronto.ca/programs-courses/courses/3251-statistics-data-science',\n    university: 'U of T SCS',\n  },\n  {\n    title: 'Big Data Management Systems & Tools',\n    number: '3252',\n    link: 'https://learn.utoronto.ca/programs-courses/courses/3252-big-data-management-systems-tools',\n    university: 'U of T SCS',\n  },\n  {\n    title: 'Machine Learning',\n    number: '3253',\n    link: 'https://learn.utoronto.ca/programs-courses/courses/3253-machine-learning',\n    university: 'U of T SCS',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'University of Toronto School of Continuing Studies',\n    degree: 'Certificate in Data Science',\n    link: 'https://learn.utoronto.ca/programs-courses/certificates/data-science',\n    year: 2017,\n  },\n  {\n    school: 'Ivey School of Business @ Western University',\n    degree: 'Honours Business Administration with Distinction',\n    link: 'https://ivey.uwo.ca',\n    year: 2007,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Overview Analytics',\n    position: 'Owner/Operator',\n    link: 'https://overviewanalytics.ca',\n    daterange: '2015 - Present',\n    points: [\n      'Led consulting engagements with small businesses on strategy, analytics and business planning. Added value through applied analytics and entrepreneurial guidance gained from years of experience working with startups.',\n      'Using R, Shiny, and Leaflet map libraries, built a working location analytics application that allow telecom analysts to see patterns in the distribution of cell phone towers in Canada. Deployed on Google Cloud using Google Compute Engine and Docker.',\n      'Developed sentiment analysis pipeline using the Twitter API for data ingestion, Node-RED IoT programming tool for data processing, InfluxDB for data storage, and Grafana for data visualization, running Linux on a Raspberry Pi to track trending topics and patterns over time.',\n      'Completed Data Science Fundamentals Certificate at the University of Toronto School of Continuing Studies including courses in statistics, data science fundamentals, big data systems & tools, and machine learning.',\n    ],\n  },\n  {\n    company: 'Rogers Communications',\n    position: 'Manager, Small Business Wireless Base Marketing',\n    link: 'https://www.rogers.com',\n    daterange: '2019 - 2020',\n    points: [\n    ],\n  },\n  {\n    company: 'Rogers Communications',\n    position: 'Manager, Small Business Wireless Pricing & Offers',\n    link: 'https://www.rogers.com',\n    daterange: '2019',\n    points: [\n    ],\n  },\n  {\n    company: 'Rogers Communications',\n    position: 'Senior Analyst, Small Business Wireless Pricing',\n    link: 'https://www.rogers.com',\n    daterange: '2018-2019',\n    points: [\n    ],\n  },\n  {\n    company: 'MaRS Discovery District',\n    position: 'Data Partnership Manager',\n    link: 'https://marsdd.com',\n    daterange: '2013-2015',\n    points: [\n    ],\n  },\n  {\n    company: 'TechAlliance',\n    position: 'Innovation Manager',\n    link: 'https://techalliance.ca',\n    daterange: '2012-2013',\n    points: [\n    ],\n  },\n  {\n    company: 'TechAlliance',\n    position: 'Business Analyst & Startup Advisor',\n    link: 'https://techalliance.ca',\n    daterange: '2008-2012',\n    points: [\n    ],\n  },\n];\n\nexport default positions;\n","// TODO: Add Athletic Skills, Office Skills,\n// Data Engineering, Data Science, ML Engineering, ... ?\n\nconst skills = [\n  {\n    title: 'Javascript',\n    competency: 4,\n    category: ['Web Development', 'Languages', 'Javascript'],\n  },\n  {\n    title: 'Node.JS',\n    competency: 3,\n    category: ['Web Development', 'Javascript'],\n  },\n  {\n    title: 'React',\n    competency: 3,\n    category: ['Web Development', 'Javascript'],\n  },\n  {\n    title: 'Bash',\n    competency: 2,\n    category: ['Tools', 'Languages'],\n  },\n  {\n    title: 'Amazon Web Services',\n    competency: 4,\n    category: ['Web Development', 'Tools'],\n  },\n  {\n    title: 'Heroku',\n    competency: 2,\n    category: ['Web Development', 'Tools'],\n  },\n  {\n    title: 'MongoDB',\n    competency: 3,\n    category: ['Web Development', 'Databases'],\n  },\n  {\n    title: 'ElasticSearch',\n    competency: 2,\n    category: ['Web Development', 'Databases'],\n  },\n  {\n    title: 'PostgreSQL/SQLite3/SQL',\n    competency: 4,\n    category: ['Web Development', 'Databases', 'Languages'],\n  },\n  {\n    title: 'Redis',\n    competency: 3,\n    category: ['Web Development', 'Databases'],\n  },\n  {\n    title: 'Data Mining',\n    competency: 3,\n    category: ['Data Science'],\n  },\n  {\n    title: 'Express.JS',\n    competency: 2,\n    category: ['Web Development', 'Javascript'],\n  },\n  {\n    title: 'D3',\n    competency: 2,\n    category: ['Web Development', 'Javascript'],\n  },\n  {\n    title: 'Flask',\n    competency: 2,\n    category: ['Web Development', 'Python'],\n  },\n  {\n    title: 'Git/Mercurial',\n    competency: 3,\n    category: ['Tools'],\n  },\n  {\n    title: 'Kubernetes',\n    competency: 2,\n    category: ['Tools', 'Data Engineering'],\n  },\n  {\n    title: 'Google Cloud Compute',\n    competency: 2,\n    category: ['Tools', 'Web Development'],\n  },\n  {\n    title: 'Numpy',\n    competency: 3,\n    category: ['Data Science', 'Data Engineering', 'Python'],\n  },\n  {\n    title: 'Numba',\n    competency: 2,\n    category: ['Data Science', 'Data Engineering', 'Python'],\n  },\n  {\n    title: 'Tensorflow + Keras',\n    competency: 3,\n    category: ['Data Science', 'Python'],\n  },\n  {\n    title: 'Jupyter',\n    competency: 3,\n    category: ['Data Science', 'Python'],\n  },\n  {\n    title: 'Typescript',\n    competency: 2,\n    category: ['Web Development', 'Languages', 'Javascript'],\n  },\n  {\n    title: 'HTML + SASS/SCSS/CSS',\n    competency: 3,\n    category: ['Web Development', 'Languages'],\n  },\n  {\n    title: 'Python',\n    competency: 5,\n    category: ['Languages', 'Python'],\n  },\n  {\n    title: 'C++',\n    competency: 2,\n    category: ['Languages'],\n  },\n  {\n    title: 'Julia',\n    competency: 2,\n    category: ['Languages'],\n  },\n  {\n    title: 'MATLAB',\n    competency: 2,\n    category: ['Languages'],\n  },\n  {\n    title: 'R',\n    competency: 2,\n    category: ['Languages'],\n  },\n  {\n    title: 'Data Visualization',\n    competency: 3,\n    category: ['Data Science', 'Javascript'],\n  },\n  {\n    title: 'GraphQL',\n    competency: 2,\n    category: ['Web Development', 'Databases'],\n  },\n  {\n    title: 'Pandas',\n    competency: 5,\n    category: ['Data Engineering', 'Data Science', 'Python'],\n  },\n  {\n    title: 'Matplotlib',\n    competency: 3,\n    category: ['Data Engineering', 'Data Science', 'Python'],\n  },\n  {\n    title: 'Scikit-Learn',\n    competency: 4,\n    category: ['Data Engineering', 'Data Science', 'Python'],\n  },\n  {\n    title: 'Hadoop',\n    competency: 2,\n    category: ['Data Engineering', 'Data Science'],\n  },\n  {\n    title: 'Spark',\n    competency: 2,\n    category: ['Data Engineering', 'Data Science'],\n  },\n  {\n    title: 'Dagster',\n    competency: 2,\n    category: ['Data Engineering', 'Python'],\n  },\n  {\n    title: 'Mypy',\n    competency: 3,\n    category: ['Python'],\n  },\n  {\n    title: 'Pylint',\n    competency: 4,\n    category: ['Data Engineering', 'Python'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Skills',\n  'Courses',\n  'References',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Alec Miller's Resume. Lenovo, TechAlliance, MaRS, Rogers, Overview Analytics.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Skills skills={skills} categories={categories} />\n      <Courses data={courses} />\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"sourceRoot":""}